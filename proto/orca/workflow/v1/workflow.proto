syntax = "proto3";

package orca.workflow.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/davidsbond/orca/internal/proto/orca/workflow/v1;workflowv1";

// The Run type represents the current state of a single workflow run
message Run {
  // The unique identifier of the workflow run.
  string run_id = 1;
  // The unique identifier of the parent workflow run this workflow was run within. Assumed to be the root if this
  // is not provided.
  string parent_workflow_run_id = 2;
  // The name of the workflow being ran.
  string workflow_name = 3;
  // When the workflow run was created.
  google.protobuf.Timestamp created_at = 4;
  // When the workflow run was scheduled.
  google.protobuf.Timestamp scheduled_at = 5;
  // When the workflow run was started.
  google.protobuf.Timestamp started_at = 6;
  // When the workflow run was completed.
  google.protobuf.Timestamp completed_at = 7;
  // The status of the workflow run.
  Status status = 8;
  // The JSON encoded input provided to the workflow run.
  bytes input = 9;
  // The JSON encoded output of the workflow run.
  bytes output = 10;
}

// The Status enumeration represents the status of a workflow run.
enum Status {
  // The workflow run has an unknown status.
  STATUS_UNSPECIFIED = 0;
  // The workflow run has been created and is awaiting scheduling.
  STATUS_PENDING = 1;
  // The workflow run has been scheduled and is awaiting execution.
  STATUS_SCHEDULED = 2;
  // The workflow run is running.
  STATUS_RUNNING = 3;
  // The workflow run completed successfully.
  STATUS_COMPLETE = 4;
  // The workflow run failed.
  STATUS_FAILED = 5;
}
